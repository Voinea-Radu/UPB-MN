
================================================================================
The Numerical Methods team reserves its right to change your final score in case
anything suspicious is found in the source code.

Please refer to the course's guidelines for more info.
================================================================================

Task 1. Anomaly Detection
-------------------------

[estimate_gaussian_1]: 1p / 1p (OK)
[estimate_gaussian_2]: 1p / 1p (OK)
[estimate_gaussian_3]: 1p / 1p (OK)
[estimate_gaussian_4]: 1p / 1p (OK)
[estimate_gaussian_5]: 1p / 1p (OK)
[multivariate_gaussian_1]: 1p / 1p (OK)
[multivariate_gaussian_2]: 1p / 1p (OK)
[multivariate_gaussian_3]: 1p / 1p (OK)
[multivariate_gaussian_4]: 1p / 1p (OK)
[multivariate_gaussian_5]: 1p / 1p (OK)
[optimal_threshold_1]: 1p / 1p (OK)
[optimal_threshold_2]: 1p / 1p (OK)
[optimal_threshold_3]: 1p / 1p (OK)
[optimal_threshold_4]: 1p / 1p (OK)
[optimal_threshold_5]: 1p / 1p (OK)
[identify_outliers_1]: 1p / 1p (OK)
[identify_outliers_2]: 1p / 1p (OK)
[identify_outliers_3]: 1p / 1p (OK)
[identify_outliers_4]: 1p / 1p (OK)
[identify_outliers_5]: 1p / 1p (OK)

=> TOTAL: 20p / 20p


Task 2. Kernel Regression
-------------------------

[test-kernel-functions]: 1p / 1p (OK)
[build-kernel1]: 1p / 1p (OK)
[build-kernel2]: 1p / 1p (OK)
[build-kernel3]: 1p / 1p (OK)
[build-kernel4]: 1p / 1p (OK)
[test-cholesky-func]: 0.5p / 0.5p (OK)
[test-lower-inverse]: 0.5p / 0.5p (OK)
[test-get-prediction-params]: 2p / 2p (OK)
[test-get-prediction-params2]: 2p / 2p (OK)
[test-get-prediction-params-iter]: 0p / 2p (WA)
[test-get-prediction-params-iter2]: 0p / 3p (WA)
[test-dataset1]: 5p / 5p (OK)
[test-dataset2]: 0p / 5p (WA)
[test-dataset3]: 5p / 5p (OK)
[test-dataset4]: 5p / 5p (OK)

=> TOTAL: 25.0p / 35.0p


Task 3. Stochastic Text Generation
----------------------------------

[test-split-input]: 1p / 1p (OK)
[test-piatza-distinct-words]: 0p / 2p (WA)
[test-abc-distinct-words]: 0p / 1p (WA)
[test-abc-k-secv-2]: 0p / 3p (WA)
[test-abc-k-secv-3]: 0p / 3p (WA)
[test-abc-distinct-k-secv]: 0p / 3p (WA)
[test-poe-distinct-k-secv-and-distinct-words]: 0p / 3p (WA)
[test-poe-word-idx]: 0p / 4p (WA)
[test-poe-word-idx-and-k-secv-idx]: 0p / 4p (WA)
[test-abc-stochastic-matrix]: 0p / 5p (WA)
[test-poe-stochastic-matrix]: 0p / 7p (WA)
[test-jekyllandhyde-stochastic-matrix]: 0p / 9p (WA)

=> TOTAL: 1p / 45p

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
FINAL SCORE: 46.0p / 100.0p
Up to 10p can be awarded for providing a good README and clean code!
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

